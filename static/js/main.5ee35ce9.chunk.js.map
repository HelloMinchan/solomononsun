{"version":3,"sources":["Screen/Picture/Cat.png","Screen/Picture/foodFirstCat.png","Screen/Picture/foodSecondCat.jpg","Screen/Picture/food1.jpg","Screen/Picture/food2.jpg","Screen/Picture/food3.jpg","Screen/FirstScreen.js","Screen/LoadingScreen.js","Screen/SecondScreen.js","App.js","index.js"],"names":["module","exports","FirstScreen","props","className","src","Cat","alt","Button","variant","block","onClick","setFinishFirst","LoadingScreen","situation","type","color","foodNameList","foodPictureList","foodPicture1","foodPicture2","foodPicture3","tempClickEvent","e","preventDefault","alert","SecondScreen","useState","foodName","setFoodName","foodPicture","setFoodPicture","basicDescription2","setBasicDescription2","useEffect","index","Math","floor","random","foodFisrtCat","setTimeout","foodSecondCat","App","isLoading","setIsLoading","finishFirst","ReactDOM","render","document","getElementById"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,iC,iBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,4OC6C5BC,EAvCK,SAAAC,GAClB,OACE,yBAAKC,UAAU,eACb,yBAAKA,UAAU,sBACb,8DACA,sIACA,4GAGF,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,0BACb,kDACA,yBAAKA,UAAU,iCACb,kDACA,uCAEF,0DAEF,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,sBAAsBC,IAAKC,IAAKC,IAAI,WAKzD,yBAAKH,UAAU,sBACb,kBAACI,EAAA,EAAD,CACEJ,UAAU,2BACVK,QAAQ,SACRC,OAAK,EACLC,QAAS,kBAAMR,EAAMS,gBAAe,KAJtC,gC,wBCFOC,EA1BO,SAAAV,GACpB,OAAwB,IAApBA,EAAMW,UAEN,yBAAKV,UAAU,iBACb,kBAAC,IAAD,CACEA,UAAU,UACVW,KAAM,kBACNC,MAAM,YAER,wCAKF,yBAAKZ,UAAU,iBACb,kBAAC,IAAD,CACEA,UAAU,UACVW,KAAM,kBACNC,MAAM,YAER,qD,6FCXFC,EAAe,CAAC,qBAAO,qBAAO,wCAC9BC,EAAkB,CAACC,IAAcC,IAAcC,KAM/CC,EAAiB,SAAAC,GACrBA,EAAEC,iBACFC,MAAM,qCA2DOC,EAxDM,WAAO,IAAD,EACOC,mBAAS,IADhB,mBAClBC,EADkB,KACRC,EADQ,OAEaF,mBAAS,IAFtB,mBAElBG,EAFkB,KAELC,EAFK,OAGyBJ,mBAAS,IAHlC,mBAGlBK,EAHkB,KAGCC,EAHD,KAyBzB,OApBAC,qBAAU,WACR,IAAIC,EAdCC,KAAKC,MAAsB,EAAhBD,KAAKE,UAgBrBP,EAAeQ,KAEfC,YAAW,WACTT,EAAeU,OACd,MACHD,YAAW,WACTP,EAAqB,wCACpB,KAEHO,YAAW,WACTT,EAAeb,EAAgBiB,MAC9B,MACHK,YAAW,WACTX,EAAYZ,EAAakB,MACxB,QACF,IAGD,yBAAK/B,UAAU,gBACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,4BACb,yBACEA,UAAU,uBACVC,IAAKyB,EACLvB,IAAI,kBAIV,yBAAKH,UAAU,mCACb,yBAAKA,UAAU,4BACb,wBAAIA,UAAU,sBApDE,2DAqDhB,4BAAK4B,GACL,wBAAI5B,UAAU,yBAAyBwB,IAEzC,yBAAKxB,UAAU,8BACb,kBAACI,EAAA,EAAD,CACEJ,UAAU,6BACVK,QAAQ,SACRE,QAASW,GAHX,iCC3CKoB,EApBH,WAAO,IAAD,EACkBf,oBAAS,GAD3B,mBACTgB,EADS,KACEC,EADF,OAEsBjB,oBAAS,GAF/B,mBAETkB,EAFS,KAEIjC,EAFJ,KAWhB,OAPAsB,qBAAU,WACRU,GAAa,GACbJ,YAAW,WACTI,GAAa,KACZ,OACF,CAACC,IAEAF,EACK,kBAAC,EAAD,CAAe7B,UAAW+B,KACV,IAAdF,IAAuC,IAAhBE,EACzB,kBAAC,EAAD,CAAajC,eAAgBA,IAE7B,kBAAC,EAAD,OCfXkC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5ee35ce9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Cat.5915aabd.png\";","module.exports = __webpack_public_path__ + \"static/media/foodFirstCat.89a3996a.png\";","module.exports = __webpack_public_path__ + \"static/media/foodSecondCat.82a8c4d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/food1.aa26238c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/food2.cd5e139c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/food3.38cb9891.jpg\";","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"./FirstCss.css\";\n\nimport Cat from \"./Picture/Cat.png\";\n\nconst FirstScreen = props => {\n  return (\n    <div className=\"FirstScreen\">\n      <div className=\"FirstScreen_header\">\n        <h6>상명대학교</h6>\n        <h6>소프트웨어 X 디지털콘텐츠 X 시각디자인</h6>\n        <h6>정민찬 이지우 엄지수 이수진</h6>\n      </div>\n\n      <div className=\"FirstScreen_body\">\n        <div className=\"FirstScreen_body_background\">\n          <div className=\"FirstScreen_body_title\">\n            <h3>솔로몬</h3>\n            <div className=\"FirstScreen_body_title_inline\">\n              <h2>온순이</h2>\n              <h3>의</h3>\n            </div>\n            <h3>점심 판결</h3>\n          </div>\n          <div className=\"FirstScreen_body_picture\">\n            <img className=\"FirstScreen_picture\" src={Cat} alt=\"Cat\"></img>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"FirstScreen_footer\">\n        <Button\n          className=\"FirstScreen_button_start\"\n          variant=\"danger\"\n          block\n          onClick={() => props.setFinishFirst(true)}\n        >\n          판결 신청\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default FirstScreen;\n","import React from \"react\";\nimport \"./LoadingCss.css\";\nimport ReactLoading from \"react-loading\";\n\nconst LoadingScreen = props => {\n  if (props.situation === false) {\n    return (\n      <div className=\"LoadingScreen\">\n        <ReactLoading\n          className=\"loading\"\n          type={\"spinningBubbles\"}\n          color=\"#000000\"\n        />\n        <h2>Loading</h2>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"LoadingScreen\">\n        <ReactLoading\n          className=\"loading\"\n          type={\"spinningBubbles\"}\n          color=\"#000000\"\n        />\n        <h2>판결 중</h2>\n      </div>\n    );\n  }\n};\n\nexport default LoadingScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"./SecondCss.css\";\n\nimport foodFisrtCat from \"./Picture/foodFirstCat.png\";\nimport foodSecondCat from \"./Picture/foodSecondCat.jpg\";\n\nimport foodPicture1 from \"./Picture/food1.jpg\";\nimport foodPicture2 from \"./Picture/food2.jpg\";\nimport foodPicture3 from \"./Picture/food3.jpg\";\n\nconst basicDescription1 = \"냥냥법 제 3장에 의거 !!\";\n\nconst foodNameList = [\"용우동\", \"옹달샘\", \"숟가락젓가락\"];\nconst foodPictureList = [foodPicture1, foodPicture2, foodPicture3];\n\nconst foodRandomIndex = () => {\n  return Math.floor(Math.random() * 3);\n};\n\nconst tempClickEvent = e => {\n  e.preventDefault();\n  alert(\"항소할 거야!\");\n};\n\nconst SecondScreen = () => {\n  const [foodName, setFoodName] = useState(\"\");\n  const [foodPicture, setFoodPicture] = useState(\"\");\n  const [basicDescription2, setBasicDescription2] = useState(\"\");\n\n  useEffect(() => {\n    let index = foodRandomIndex();\n\n    setFoodPicture(foodFisrtCat);\n\n    setTimeout(() => {\n      setFoodPicture(foodSecondCat);\n    }, 5900);\n    setTimeout(() => {\n      setBasicDescription2(\"너의 점심은...\");\n    }, 6000);\n\n    setTimeout(() => {\n      setFoodPicture(foodPictureList[index]);\n    }, 8500);\n    setTimeout(() => {\n      setFoodName(foodNameList[index]);\n    }, 8500);\n  }, []);\n\n  return (\n    <div className=\"SecondScreen\">\n      <div className=\"SecondScreen_foodSection\">\n        <div className=\"SecondScreen_foodPicture\">\n          <img\n            className=\"SecondScreen_picture\"\n            src={foodPicture}\n            alt=\"Cat or Food\"\n          ></img>\n        </div>\n      </div>\n      <div className=\"SecondScreen_descriptionSection\">\n        <div className=\"SecondScreen_description\">\n          <h3 className=\"SecondScreen_text1\">{basicDescription1}</h3>\n          <h3>{basicDescription2}</h3>\n          <h1 className=\"SecondScreen_foodName\">{foodName}</h1>\n        </div>\n        <div className=\"SecondScreen_buttonSection\">\n          <Button\n            className=\"SecondScreen_button_appeal\"\n            variant=\"danger\"\n            onClick={tempClickEvent}\n          >\n            항소 신청\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SecondScreen;\n","import React, { useState, useEffect } from \"react\";\nimport FirstScreen from \"./Screen/FirstScreen\";\nimport LoadingScreen from \"./Screen/LoadingScreen\";\nimport SecondScreen from \"./Screen/SecondScreen\";\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [finishFirst, setFinishFirst] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 3000);\n  }, [finishFirst]);\n\n  if (isLoading) {\n    return <LoadingScreen situation={finishFirst} />;\n  } else if (isLoading === false && finishFirst === false) {\n    return <FirstScreen setFinishFirst={setFinishFirst} />;\n  } else {\n    return <SecondScreen />;\n  }\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}